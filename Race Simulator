#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

// Structures section
struct Race {
  int numberOfLaps;
  int currentLap;
  char *firstPlaceDriverName;
  char *firstPlaceRaceCarColor;
};

struct RaceCar {
  char *driverName;
  char *raceCarColor;
  int totalLaptime;
};

// Print functions section
char printIntro() {
  printf("Welcome to f1 race SA, buckle up for an action packed day\n");
}

// countdown
void printCountDown() {
  printf("Racers Ready! In...\n5\n4\n3\n2\n1\n");
 printf("Race\n");

}

// first Place after lap 1
char printFirstPlaceAfterLap(struct Race race)
{
  printf("After lap number %d\n", race.   currentLap);
  printf("First Place is: %s in the %s race car!\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);

};

char printCongratulation(struct Race race) {
 printf("Let's all congratulate %s in the %s race car for an amazing performance.\nIt truly was a great race and everybody have a goodnight!", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);

};
//congratulate winner

// Logic functions section
// time for race car to complete a lap
int calculateTimeToCompleteLap(void) {
  int speed = (rand() % 3) + 1;
  int acceleration = (rand() % 3) + 1;
  int nerves = (rand() % 3) + 1;

  return speed + acceleration + nerves;
};

// total race time
void updateRaceCar(struct RaceCar* raceCar) {
raceCar->totalLaptime += calculateTimeToCompleteLap();

};

void updateFirstPlace(struct Race *race, struct RaceCar *raceCar1, struct RaceCar *raceCar2) {
  if (raceCar1->totalLaptime <= raceCar2->totalLaptime)
  {
    race->firstPlaceDriverName = raceCar1->driverName;
    race->firstPlaceRaceCarColor = raceCar1->raceCarColor;
  }
  else
  {
    race->firstPlaceDriverName = raceCar2->driverName;
    race->firstPlaceRaceCarColor = raceCar2->raceCarColor;
  }
};

// start the race function
void startRace(struct RaceCar* raceCar1, struct RaceCar* raceCar2) {
  struct Race race = {5, 0, "", ""};
 
  

  for (int i = 0; i < race.numberOfLaps; i++) 
  {
    race.currentLap++;
    updateRaceCar(raceCar1);
    updateRaceCar(raceCar2);
    updateFirstPlace(&race, raceCar1, raceCar2);
    printFirstPlaceAfterLap(race);

  } 
  printCongratulation(race);

};



int main() {
	srand(time(0));

  struct RaceCar Car1 = {"Pete", "blue", 0};
  struct RaceCar Car2 = {"Ben", "black", 0};
  printIntro();
  printCountDown();
  
  startRace(&Car1, &Car2);
};
